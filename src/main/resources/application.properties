spring.application.name=modapto-notification-center

server.port=${SERVER_PORT:8091}

build.version=@project.version@

application.url=${APP_URL:http://localhost:8091}

use-case.pilot=${PILOT_CASE:Pilot}

## Logging
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.web.cors=DEBUG
logging.pattern.console=%green([%d{dd-MM-yyyy HH:mm:ss}]) %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n

## Elasticsearch Configuration
spring.elasticsearch.uris=${ELASTICSEARCH_URL:http://localhost:9200}
spring.elasticsearch.username=${ELASTIC_USERNAME:username}
spring.elasticsearch.password=${ELASTIC_PASSWORD:password}
spring.elasticsearch.rest.index-settings.number_of_replicas=0
spring.elasticsearch.connection-timeout=1s
spring.elasticsearch.socket-timeout=1m
spring.data.elasticsearch.repositories.enabled=true

## Keycloak Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri = ${KEYCLOAK_REALM_URL:http://localhost:9080/realms/modapto-dev}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
spring.security.cors.domains=${CORS_DOMAINS:http://localhost:3000}
user.manager.component.url=${USER_MANAGER_URL:http://localhost:8093}
keycloak.client=${KEYCLOAK_CLIENT:modapto}
keycloak.client.secret=${KEYCLOAK_CLIENT_SECRET:###}
keycloak.token-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/token

## Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BROKERS_URL:localhost:9092}
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.admin.auto-create=false
kafka.topics=${KAFKA_TOPICS:test-topic}

# Consumer Config
# Deserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=gr.atc.modapto.dto.EventDto

# Offset (latest -> read from the last consumed offset of the Topic, earliest -> read from the beginning)
spring.kafka.consumer.auto-offset-reset=earliest

# Increase connection timeout and retry
spring.kafka.consumer.properties.request.timeout.ms=30000
spring.kafka.consumer.properties.max.poll.interval.ms=300000
spring.kafka.consumer.properties.max.poll.records=500

# Network configuration
spring.kafka.consumer.properties.reconnect.backoff.ms=1000
spring.kafka.consumer.properties.reconnect.backoff.max.ms=10000

# Consumer group
spring.kafka.consumer.group-id=${KAFKA_GROUP:local-modapto-notification-center}

## OpenAPI - Swagger
springdoc.swagger-ui.path=/api/notification-center/swagger
springdoc.api-docs.path=/api/notification-center/v3/api-docs

## Actuator
management.endpoints.web.exposure.include=*

## Threads
spring.threads.virtual.enabled=true
spring.thread-executor=virtual
spring.jmx.enabled=false