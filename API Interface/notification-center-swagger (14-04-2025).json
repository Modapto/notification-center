{
  "openapi": "3.0.3",
  "info": {
    "title": "Notifacation Center API",
    "description": "API documentation for Notification Center Service of MODAPTO",
    "version": "0.6-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:8091"
    }
  ],
  "tags": [
    {
      "name": "Assignment Controller",
      "description": "Manage assignments of users"
    },
    {
      "name": "Event Controller",
      "description": "Manage events and event mappings for MODAPTO system"
    },
    {
      "name": "Notification Controller",
      "description": "Manage notifications for MODAPTO system"
    }
  ],
  "paths": {
    "/api/notifications/{notificationId}/notificationStatus": {
      "put": {
        "tags": [
          "Notification Controller"
        ],
        "summary": "Update notification status command of a specific Notification (From Unread to Read)",
        "operationId": "updateNotificationStatus",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification status updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Notification with id [ID] not found in DB",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/events/mappings/{mappingId}": {
      "put": {
        "tags": [
          "Event Controller"
        ],
        "summary": "Update an Event Mapping",
        "operationId": "updateEventMappingById",
        "parameters": [
          {
            "name": "mappingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMappingsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Event mapping updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Event mapping with id [ID] not found in DB",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Event Controller"
        ],
        "summary": "Delete an assignment by ID",
        "operationId": "deleteEventMappingById",
        "parameters": [
          {
            "name": "mappingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event mapping deleted successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Event mapping with id [ID] not found in DB",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/assignments/{assignmentId}": {
      "get": {
        "tags": [
          "Assignment Controller"
        ],
        "summary": "Retrieve an Assignment given its ID",
        "operationId": "getAssignmentById",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assignment retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseAssignmentDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseAssignmentDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseAssignmentDto"
                }
              }
            }
          },
          "404": {
            "description": "Assignment with id [ID] not found in DB",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseAssignmentDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      },
      "put": {
        "tags": [
          "Assignment Controller"
        ],
        "summary": "Update an assignment",
        "operationId": "updateAssignment",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Assignment updated successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "500": {
            "description": "Unable to create and store assignment",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Assignment Controller"
        ],
        "summary": "Delete an assignment by ID",
        "operationId": "deleteAssignmentById",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assignment deleted successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "404": {
            "description": "Assignment with id [ID] not found in DB",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/assignments/{assignmentId}/comments": {
      "put": {
        "tags": [
          "Assignment Controller"
        ],
        "summary": "Add a comment to an assignment depending on the user (Source or Target)",
        "operationId": "updateAssignmentComments",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentCommentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Assignment comments updated successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "500": {
            "description": "Unable to create and store assignment",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/events/mappings/create": {
      "post": {
        "tags": [
          "Event Controller"
        ],
        "summary": "Create a new event Mapping",
        "operationId": "storeNewEventMapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventMappingsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Event mapping created successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "500": {
            "description": "Error storing event mapping!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/assignments/create": {
      "post": {
        "tags": [
          "Assignment Controller"
        ],
        "summary": "Create a new assignment",
        "operationId": "createAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Assignment created successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "401": {
            "description": "Invalid JWT token inserted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          },
          "500": {
            "description": "Unable to create and store assignment",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseString"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "Notification Controller"
        ],
        "summary": "Retrieve all Notifications for Super-Admins",
        "operationId": "getAllNotifications",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortAttribute",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "timestamp"
            }
          },
          {
            "name": "isAscending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoNotificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. You don't have the rights to access the resource or check the JWT and CSRF Tokens",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoNotificationDto"
                }
              }
            }
          },
          "404": {
            "description": "Invalid sort attributes",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoNotificationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/notifications/{notificationId}": {
      "get": {
        "tags": [
          "Notification Controller"
        ],
        "summary": "Retrieve Notification By ID",
        "operationId": "getNotificationById",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseNotificationDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseNotificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseNotificationDto"
                }
              }
            }
          },
          "404": {
            "description": "Notification with id [ID] not found in DB",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseNotificationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/notifications/user/{userId}": {
      "get": {
        "tags": [
          "Notification Controller"
        ],
        "summary": "Retrieve all notification per UserID",
        "operationId": "getAllNotificationPerUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortAttribute",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "timestamp"
            }
          },
          {
            "name": "isAscending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications retrieved successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoNotificationDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoNotificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoNotificationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/notifications/user/{userId}/unread": {
      "get": {
        "tags": [
          "Notification Controller"
        ],
        "summary": "Retrieve all unread notifications for a specific user",
        "operationId": "getAllUnreadNotificationPerUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unread notifications retrieved successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseListNotificationDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseListNotificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseListNotificationDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/events": {
      "get": {
        "tags": [
          "Event Controller"
        ],
        "summary": "Retrieve all events",
        "operationId": "getAllEvents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortAttribute",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "timestamp"
            }
          },
          {
            "name": "isAscending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events retrieved successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoEventDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoEventDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoEventDto"
                }
              }
            }
          },
          "404": {
            "description": "Invalid sort attributes",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoEventDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/events/mappings": {
      "get": {
        "tags": [
          "Event Controller"
        ],
        "summary": "Get all Event Mappings",
        "operationId": "getAllEventMappings",
        "responses": {
          "200": {
            "description": "Event mapping retrieved successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseListEventMappingsDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseListEventMappingsDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseListEventMappingsDto"
                }
              }
            }
          },
          "500": {
            "description": "Error storing event mapping!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponseListEventMappingsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/assignments": {
      "get": {
        "tags": [
          "Assignment Controller"
        ],
        "summary": "Retrieve all Assignments for Super-Admins usage",
        "operationId": "getAllAssignments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortAttribute",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "timestampUpdated"
            }
          },
          {
            "name": "isAscending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assignments retrieved successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid sort attribute.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. You don't have the rights to access the resource or check the JWT and CSRF Tokens",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/api/assignments/user/{userId}": {
      "get": {
        "tags": [
          "Assignment Controller"
        ],
        "summary": "Retrieve all Assignment per UserID and Status (optional) and Assignment Type (Source or Received) (optional)",
        "operationId": "getAllAssignmentPerUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortAttribute",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "timestampUpdated"
            }
          },
          {
            "name": "isAscending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assignments retrieved successfully!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid assignment type. Only 'requested' or 'received' are allowed.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          },
          "401": {
            "description": "Authentication process failed!",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          },
          "403": {
            "description": "Invalid authorization parameters. Check JWT or CSRF Token",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAppResponsePaginatedResultsDtoAssignmentDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BaseAppResponseString": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventMappingsDto": {
        "title": "Event Mapping",
        "required": [
          "topic",
          "userRoles"
        ],
        "type": "object",
        "properties": {
          "eventMappingId": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "userRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Event Mapping Object Representation"
      },
      "AssignmentCommentDto": {
        "title": "Assignment Comment",
        "required": [
          "comment",
          "originName"
        ],
        "type": "object",
        "properties": {
          "originName": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "comment": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          }
        },
        "description": "Assignment Comment Object Representation"
      },
      "AssignmentDto": {
        "title": "Assignment",
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "string"
          },
          "sourceUserId": {
            "type": "string"
          },
          "targetUserId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentCommentDto"
            }
          },
          "description": {
            "type": "string"
          },
          "productionModule": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "timestampUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "priority": {
            "type": "string"
          }
        },
        "description": "Assignment Object Representation"
      },
      "BaseAppResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BaseAppResponsePaginatedResultsDtoNotificationDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResultsDtoNotificationDto"
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationDto": {
        "title": "Notification",
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "notificationType": {
            "type": "string"
          },
          "relatedEvent": {
            "type": "string"
          },
          "relatedAssignment": {
            "type": "string"
          },
          "notificationStatus": {
            "type": "string"
          },
          "messageStatus": {
            "type": "string"
          },
          "sourceComponent": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "productionModule": {
            "type": "string"
          },
          "smartService": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "priority": {
            "type": "string"
          }
        },
        "description": "Notification Object Representation"
      },
      "PaginatedResultsDtoNotificationDto": {
        "title": "Paginated Results",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            }
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "lastPage": {
            "type": "boolean"
          }
        },
        "description": "Paginated Result Data Transfer Object"
      },
      "BaseAppResponseNotificationDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/NotificationDto"
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BaseAppResponseListNotificationDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            }
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BaseAppResponsePaginatedResultsDtoEventDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResultsDtoEventDto"
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventDto": {
        "title": "Event",
        "required": [
          "priority",
          "productionModule",
          "topic"
        ],
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "productionModule": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "priority": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "sourceComponent": {
            "type": "string"
          },
          "smartService": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "results": {
            "$ref": "#/components/schemas/JsonNode"
          }
        },
        "description": "Event Object Representation"
      },
      "JsonNode": {
        "type": "object"
      },
      "PaginatedResultsDtoEventDto": {
        "title": "Paginated Results",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventDto"
            }
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "lastPage": {
            "type": "boolean"
          }
        },
        "description": "Paginated Result Data Transfer Object"
      },
      "BaseAppResponseListEventMappingsDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventMappingsDto"
            }
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BaseAppResponsePaginatedResultsDtoAssignmentDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaginatedResultsDtoAssignmentDto"
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PaginatedResultsDtoAssignmentDto": {
        "title": "Paginated Results",
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentDto"
            }
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "lastPage": {
            "type": "boolean"
          }
        },
        "description": "Paginated Result Data Transfer Object"
      },
      "BaseAppResponseAssignmentDto": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AssignmentDto"
          },
          "errors": {
            "type": "object"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}